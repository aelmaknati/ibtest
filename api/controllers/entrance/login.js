module.exports={friendlyName:"Login",description:"Log in using the provided email and password combination.",extendedDescription:"This action attempts to look up the user record in the database with the\nspecified email address.  Then, if such a user exists, it uses\nbcrypt to compare the hashed password from the database with the provided\npassword attempt.",inputs:{emailAddress:{description:'The email to try in this attempt, e.g. "irl@example.com".',type:"string",required:!0},password:{description:'The unencrypted password to try in this attempt, e.g. "passwordlol".',type:"string",required:!0},rememberMe:{description:"Whether to extend the lifetime of the user's session.",extendedDescription:"Note that this is NOT SUPPORTED when using virtual requests (e.g. sending\nrequests over WebSockets instead of HTTP).",type:"boolean"}},exits:{success:{description:"The requesting user agent has been successfully logged in.",extendedDescription:'Under the covers, this stores the id of the logged-in user in the session\nas the `userId` key.  The next time this user agent sends a request, assuming\nit includes a cookie (like a web browser), Sails will automatically make this\nuser id available as req.session.userId in the corresponding action.  (Also note\nthat, thanks to the included "custom" hook, when a relevant request is received\nfrom a logged-in user, that user\'s entire record from the database will be fetched\nand exposed as `req.me`.)'},badCombo:{description:"The provided email and password combination does not\n      match any user in the database.",responseType:"unauthorized"}},fn:async function({emailAddress:emailAddress,password:password,rememberMe:rememberMe}){var userRecord=await User.findOne({emailAddress:emailAddress.toLowerCase()});if(!userRecord)throw"badCombo";await sails.helpers.passwords.checkPassword(password,userRecord.password).intercept("incorrect","badCombo"),rememberMe&&(this.req.isSocket?sails.log.warn("Received `rememberMe: true` from a virtual request, but it was ignored\nbecause a browser's session cookie cannot be reset over sockets.\nPlease use a traditional HTTP request instead."):this.req.session.cookie.maxAge=sails.config.custom.rememberMeCookieMaxAge),this.req.session.userId=userRecord.id,sails.hooks.sockets&&await sails.helpers.broadcastSessionChange(this.req)}};