module.exports=function(sails){return{initialize:async function(){sails.log.info("Initializing project hook... (`api/hooks/custom/`)");var IMPORTANT_STRIPE_CONFIG=["stripeSecret","stripePublishableKey"],IMPORTANT_SENDGRID_CONFIG=["sendgridSecret","internalEmailAddress"],isMissingStripeConfig=_.difference(IMPORTANT_STRIPE_CONFIG,Object.keys(sails.config.custom)).length>0,isMissingSendgridConfig=_.difference(IMPORTANT_SENDGRID_CONFIG,Object.keys(sails.config.custom)).length>0;if(isMissingStripeConfig||isMissingSendgridConfig){let missingFeatureText=isMissingStripeConfig&&isMissingSendgridConfig?"billing and email":isMissingStripeConfig?"billing":"email",suffix="";_.contains(["silly"],sails.config.log.level)&&(suffix="\n> Tip: To exclude sensitive credentials from source control, use:\n> • config/local.js (for local development)\n> • environment variables (for production)\n>\n> If you want to check them in to source control, use:\n> • config/custom.js  (for development)\n> • config/env/staging.js  (for staging)\n> • config/env/production.js  (for production)\n>\n> (See https://sailsjs.com/docs/concepts/configuration for help configuring Sails.)\n");let problems=[];void 0===sails.config.custom.stripeSecret&&problems.push("No `sails.config.custom.stripeSecret` was configured."),void 0===sails.config.custom.stripePublishableKey&&problems.push("No `sails.config.custom.stripePublishableKey` was configured."),void 0===sails.config.custom.sendgridSecret&&problems.push("No `sails.config.custom.sendgridSecret` was configured."),void 0===sails.config.custom.internalEmailAddress&&problems.push("No `sails.config.custom.internalEmailAddress` was configured."),sails.log.verbose(`Some optional settings have not been configured yet:\n---------------------------------------------------------------------\n${problems.join("\n")}\n\nUntil this is addressed, this app's ${missingFeatureText} features\nwill be disabled and/or hidden in the UI.\n\n [?] If you're unsure or need advice, come by https://sailsjs.com/support\n---------------------------------------------------------------------${suffix}`)}sails.config.custom.enableBillingFeatures=!isMissingStripeConfig,sails.after("hook:organics:loaded",(()=>{sails.helpers.stripe.configure({secret:sails.config.custom.stripeSecret}),sails.helpers.sendgrid.configure({secret:sails.config.custom.sendgridSecret,from:sails.config.custom.fromEmailAddress,fromName:sails.config.custom.fromName})}))},routes:{before:{"/*":{skipAssets:!0,fn:async function(req,res,next){var configuredBaseHostname,url=require("url");if("GET"===req.method){if(void 0!==res.locals._environment)throw new Error("Cannot attach Sails environment as the view local `_environment`, because this view local already exists!  (Is it being attached somewhere else?)");if(res.locals._environment=sails.config.environment,void 0!==res.locals.me)throw new Error("Cannot attach view local `me`, because this view local already exists!  (Is it being attached somewhere else?)");res.locals.me=void 0}try{configuredBaseHostname=url.parse(sails.config.custom.baseUrl).host}catch(unusedErr){}if(("staging"===sails.config.environment||"production"===sails.config.environment)&&!req.isSocket&&"GET"===req.method&&req.hostname!==configuredBaseHostname)return sails.log.info("Redirecting GET request from `"+req.hostname+"` to configured expected host (`"+configuredBaseHostname+"`)..."),res.redirect(sails.config.custom.baseUrl+req.url);if(!req.session)return next();if(!req.session.userId)return next();var loggedInUser=await User.findOne({id:req.session.userId});if(!loggedInUser)return sails.log.warn("Somehow, the user record for the logged-in user (`"+req.session.userId+"`) has gone missing...."),delete req.session.userId,res.unauthorized();if(loggedInUser.password&&"unconfirmed"!==loggedInUser.emailStatus||(loggedInUser.dontDisplayAccountLinkInNav=!0),void 0!==req.me)throw new Error("Cannot attach logged-in user as `req.me` because this property already exists!  (Is it being attached somewhere else?)");req.me=loggedInUser;var MS_TO_BUFFER=6e4,now=Date.now();if(loggedInUser.lastSeenAt<now-MS_TO_BUFFER&&User.updateOne({id:loggedInUser.id}).set({lastSeenAt:now}).exec((err=>{err?sails.log.error("Background task failed: Could not update user (`"+loggedInUser.id+"`) with a new `lastSeenAt` timestamp.  Error details: "+err.stack):sails.log.verbose("Updated the `lastSeenAt` timestamp for user `"+loggedInUser.id+"`.")})),"GET"===req.method){if(void 0!==res.locals.me)throw new Error("Cannot attach logged-in user as the view local `me`, because this view local already exists!  (Is it being attached somewhere else?)");var sanitizedUser=_.extend({},loggedInUser);sails.helpers.redactUser(sanitizedUser),sanitizedUser.password&&(sails.log.warn("The logged in user record has a `password` property, but it was still there after pruning off all properties that match `protect: true` attributes in the User model.  So, just to be safe, removing the `password` property anyway..."),delete sanitizedUser.password),res.locals.me=sanitizedUser,res.locals.isBillingEnabled=sails.config.custom.enableBillingFeatures,res.locals.isEmailVerificationRequired=sails.config.custom.verifyEmailAddresses}return res.setHeader("Cache-Control","no-cache, no-store"),next()}}}}}};